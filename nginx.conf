# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             mime.types;
    default_type        application/octet-stream;
    
    gzip on; #开启或关闭gzip on off　　 
    gzip_static on;#是否开启gzip静态资源
    gzip_disable "msie6"; #不使用gzip IE6
    gzip_min_length 100k; #gzip压缩最小文件大小，超出进行压缩（自行调节）
    gzip_buffers 4 16k; #buffer 不用修改
    gzip_comp_level 3; #压缩级别:1-10，数字越大压缩的越好，时间也越长
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png; #  压缩文件类型
    gzip_vary off;  #跟Squid等缓存服务有关，on的话会在Header里增加 "Vary: Accept-Encoding"   

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/local/bin/dist/;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
            location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        location /hi {
            proxy_pass http://www.baidu.com/;
        }
        location / {
            try_files $uri $uri/ /index.html;
        }
        location /api/ {
            proxy_set_header x-forwarded-for $remote_addr;
            proxy_pass http://localhost:4399/;
        }
        location /api/upload {
            proxy_set_header x-forwarded-for $remote_addr;
            proxy_pass http://localhost:4399/upload/;
            client_max_body_size 25M;
        }
        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root html;
            add_header 'Cache-Control' 'no-cache';
            add_header 'Access-Control-Allow-Origin' '*';
        }
        # location 匹配规则为：
        # /path  匹配前缀为/path的所有路径，如/pathXXX
        # /path/ 匹配/path/XXX

        # proxy_pass 匹配规则为：
        # 如有URL为/path/XXX
        # path2  会拼接为path2path/XXX
        # path2/ 会拼接为path2/XXX

        #root 匹配规则：
        # 不管写没写/，都会将匹配到的location直接往后拼接，类似proxy_pass没有/的情况
    }
    server {
        listen       6604;
        listen       [::]:6604;
        server_name  _;
        root         /usr/local/bin/admin/;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
            location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        location /hi {
            proxy_pass http://www.baidu.com/;
        }
        location / {
            try_files $uri $uri/ /index.html;
        }
        location /api/ {
            proxy_set_header x-forwarded-for $remote_addr;
            proxy_pass http://localhost:4399/;
        }
        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root html;
            add_header 'Cache-Control' 'no-cache';
            add_header 'Access-Control-Allow-Origin' '*';
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

# rtmp {
#     server {
#         listen 1935;  #监听的端口
#         chunk_size 4096;
#         application vod {  #rtmp推流请求路径
#             play /home/video;
#         }
#     }    
# }

